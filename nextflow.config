manifest {
  author = "Chunjie Liu"
  homePage = "https://github.com/chunjie-sam-liu/rmats-turbo-nf"
  mainScript = "main.nf"
}

name = "nextflow-rnaseq"
workDir = "${HOME}/scratch/nf-work"

params {
  // Project
  projectName = false

  // FASTQ files
  sras = false // files contains sra files absolute path
  fastqs = false // fastq files absolute path with regex name *_R{1,2}_001.fastq.gz
  singleEnd = false
  readLength = false
  ngcFile = false

  // BAM files
  bams = false

  // Reference
  assemblyName = false
  gtf = false
  starIndex = false
  kallistoIndex = false

  // Trimmomatic arguments
  minLen = 20
  slidingWindow = true
  adapter = false

  // STAR arguments
  softClipping = false
  starMemory = false
  saveUnmappedReads = false

  stranded = "fr-unstranded"
  strType {
    "first-stranded" {
      strType = 2
    }
    "second-stranded" {
      strType = 1
    }
  }

  overhang = false
  sjdbOverhangMin = 1
  sjOverhangMin = 8
  filterScore = 0.66
  mismatch = 2

  // rMATS arguments
  rmats_pairs = false

  variableReadLength = true
  anchorLength = false
  novelSS = false
  allowClipping = false


  statoff = false
  pairedStats = false
  mil = 50
  mel = 500

  tstat = 1
  cstat = 0.0001

  // Other
  test = false
  skiprMATS = false
  skipMultiQC = false
  multiqc_config = "$baseDir/assets/multiqc_config.yaml"
  help = false
  mega_time = 120.h

  // Output
  outdir = "outdir"
  publishDir = "publishDir"
  tracedir = "${params.outdir}/pipeline_info"

  error_strategy = "finish"
  allowed_error_strategies = ["terminate", "finish", "ignore", "retry"]
  cleanup = false

  // Save of .commmand.* logs
  saveScript = 'task_hash=`basename \${PWD} | cut -c1-6`; mkdir command-logs-\$task_hash ; cp .command.*{err,log,sh,run} command-logs-\$task_hash'

  // Max resources
  max_memory = 1.TB
  max_cpus = 72
  max_time = 120.h
  gc_disk_size = false // google
  max_retries = 5


  echo = false
  debug = false
  config = "conf/singularity.config"
}

cleanup = params.cleanup

process {
  errorStrategy = params.error_strategy
  echo = params.echo
  container = "chunjiesamliu/rmats-turbo-nf:latest"
}

profiles {
  standard { includeConfig params.config }
  base { includeConfig "conf/base.config" }
  singularity { includeConfig "conf/singularity.config" }
  hpc { includeConfig "conf/hpc.config" }
  docker { includeConfig "conf/docker.config" }
}


dsl2 {
  enabled = true
  endpoint = "-"
}
trace {
  enabled = true
  file = "${params.tracedir}/pipeline_trace.txt"
  fields = "task_id,name,status,exit,realtime,%cpu,rss"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.html"
}
timeline {
  enabled = true
  file = "${params.tracedir}/pipeline_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/pipeline_report.html"
}
tower {
  enabled = true
  endpoint = "-"
}
